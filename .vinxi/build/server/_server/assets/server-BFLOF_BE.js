import{isPlainObject as l,isRedirect as C,isNotFound as E}from"@tanstack/react-router";import{AsyncLocalStorage as q}from"node:async_hooks";import{H3Event as b,getResponseStatus as j,getRequestURL as D,getRequestWebStream as I,getHeaders as z,eventHandler as M}from"h3";var P="Invariant failed";function U(e,n){if(!e)throw new Error(P)}function W(e={}){let n,t=!1;const r=o=>{if(n&&n!==o)throw new Error("Context conflict")};let s;if(e.asyncContext){const o=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;o?s=new o:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const c=()=>{if(s){const o=s.getStore();if(o!==void 0)return o}return n};return{use:()=>{const o=c();if(o===void 0)throw new Error("Context is not available");return o},tryUse:()=>c(),set:(o,f)=>{f||r(o),n=o,t=!0},unset:()=>{n=void 0,t=!1},call:(o,f)=>{r(o),n=o;try{return s?s.run(o,f):f()}finally{t||(n=void 0)}},async callAsync(o,f){n=o;const p=()=>{n=o},d=()=>n===o?p:void 0;T.add(d);try{const g=s?s.run(o,f):f();return t||(n=void 0),await g}finally{T.delete(d)}}}}function J(e={}){const n={};return{get(t,r={}){return n[t]||(n[t]=W({...e,...r})),n[t]}}}const w=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},R="__unctx__",B=w[R]||(w[R]=J()),K=(e,n={})=>B.get(e,n),v="__unctx_async_handlers__",T=w[v]||(w[v]=new Set),u={stringify:e=>JSON.stringify(e,function(t,r){const s=this[t],c=h.find(o=>o.stringifyCondition(s));return c?c.stringify(s):r}),parse:e=>JSON.parse(e,function(t,r){const s=this[t];if(l(s)){const c=h.find(o=>o.parseCondition(s));if(c)return c.parse(s)}return r}),encode:e=>{if(Array.isArray(e))return e.map(t=>u.encode(t));if(l(e))return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,u.encode(r)]));const n=h.find(t=>t.stringifyCondition(e));return n?n.stringify(e):e},decode:e=>{if(l(e)){const n=h.find(t=>t.parseCondition(e));if(n)return n.parse(e)}return Array.isArray(e)?e.map(n=>u.decode(n)):l(e)?Object.fromEntries(Object.entries(e).map(([n,t])=>[n,u.decode(t)])):e}},y=(e,n,t,r)=>({key:e,stringifyCondition:n,stringify:s=>({[`$${e}`]:t(s)}),parseCondition:s=>Object.hasOwn(s,`$${e}`),parse:s=>r(s[`$${e}`])}),h=[y("undefined",e=>e===void 0,()=>0,()=>{}),y("date",e=>e instanceof Date,e=>e.toISOString(),e=>new Date(e)),y("error",e=>e instanceof Error,e=>({...e,message:e.message,stack:void 0,cause:e.cause}),e=>Object.assign(new Error(e.message),e)),y("formData",e=>e instanceof FormData,e=>{const n={};return e.forEach((t,r)=>{const s=n[r];s!==void 0?Array.isArray(s)?s.push(t):n[r]=[s,t]:n[r]=t}),n},e=>{const n=new FormData;return Object.entries(e).forEach(([t,r])=>{Array.isArray(r)?r.forEach(s=>n.append(t,s)):n.append(t,r)}),n})];function V(e){let n;const t=F(e),r={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(t,{...r,body:e.node.req.body}):new Request(t,{...r,get body(){return n||(n=k(e),n)}})}function G(e){return e.web??(e.web={request:V(e),url:F(e)}),e.web.request}function Q(){return L()}const O=Symbol("$HTTPEvent");function X(e){return typeof e=="object"&&(e instanceof b||e?.[O]instanceof b||e?.__is_event__===!0)}function S(e){return function(...n){var t;let r=n[0];if(X(r))n[0]=r instanceof b||r.__is_event__?r:r[O];else{if(!((t=globalThis.app.config.server.experimental)!=null&&t.asyncContext))throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(r=Q(),!r)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");n.unshift(r)}return e(...n)}}const F=S(D),Y=S(j),Z=S(z),k=S(I);function ee(){var e;return K("nitro-app",{asyncContext:!!((e=globalThis.app.config.server.experimental)!=null&&e.asyncContext),AsyncLocalStorage:q})}function L(){return ee().use().event}const ne={"app_routes_index_tsx--getCount_createServerFn_handler":{functionName:"getCount_createServerFn_handler",importer:()=>import("./index-Be9nSCbK.js")}},ce=M(te),m=ne;async function te(e){const n=G(e),t=await oe(n);return Object.entries(Z()).forEach(([r,s])=>{r&&s&&(!t.headers.has(r)||!t.headers.get(r))&&r.toLowerCase()!=="content-length"&&t.headers.set(r,s)}),t}function re(e){return e.replace(/^\/|\/$/g,"")}async function oe(e,n){const t=e.method,r=new URL(e.url,"http://localhost:3000"),s=new RegExp(`${re("/_server")}/([^/?#]+)`),c=r.pathname.match(s),o=c?c[1]:null,f=Object.fromEntries(r.searchParams.entries());if(typeof o!="string")throw new Error("Invalid server action param for serverFnId: "+o);const p=m[o];if(!p)throw console.log("serverFnManifest",m),new Error("Server function info not found for "+o);let d;if(d=await p.importer(),!d)throw console.log("serverFnManifest",m),new Error("Server function module not resolved for "+o);const g=d[p.functionName];if(!g)throw console.log("serverFnManifest",m),console.log("fnModule",d),new Error(`Server function module export not resolved for serverFn ID: ${o}`);const $=["multipart/form-data","application/x-www-form-urlencoded"],_=await(async()=>{try{const i=await(async()=>{if(e.headers.get("Content-Type")&&$.some(N=>{var x;return(x=e.headers.get("Content-Type"))==null?void 0:x.includes(N)}))return U(t.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await e.formData();if(t.toLowerCase()==="get")return f.payload?u.parse(f.payload):void 0;const H=await e.text();return u.parse(H)})(),a=await g(i);return a instanceof Response?a:l(a)&&"result"in a&&a.result instanceof Response?a.result:C(a)||E(a)?A(a):new Response(a!==void 0?u.stringify(a):void 0,{status:Y(L()),headers:{"Content-Type":"application/json"}})}catch(i){return i instanceof Response?i:l(i)&&"result"in i&&i.result instanceof Response?i.result:C(i)||E(i)?A(i):(console.error("Server Fn Error!"),console.error(i),console.info(),new Response(u.stringify(i),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(_.headers.get("Content-Type")==="application/json"){const a=await _.clone().text();a&&JSON.stringify(JSON.parse(a))}return _}function A(e){const{headers:n,...t}=e;return new Response(JSON.stringify(t),{status:200,headers:{"Content-Type":"application/json",...n||{}}})}export{ce as a,U as i,u as s};
